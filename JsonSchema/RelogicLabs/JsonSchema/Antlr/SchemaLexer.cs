//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace RelogicLabs.JsonSchema.Antlr {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.0")]
internal partial class SchemaLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		TITLE=1, VERSION=2, INCLUDE=3, PRAGMA=4, DEFINE=5, SCHEMA=6, TRUE=7, FALSE=8, 
		NULL=9, COLON=10, COMMA=11, STAR=12, LBRACE=13, RBRACE=14, LBRACKET=15, 
		RBRACKET=16, LPAREN=17, RPAREN=18, OPTIONAL=19, UNDEFINED=20, IDENTIFIER=21, 
		ALIAS=22, DATATYPE=23, FUNCTION=24, STRING=25, INTEGER=26, FLOAT=27, DOUBLE=28, 
		MULTILINE_COMMENT=29, LINE_COMMENT=30, WHITE_SPACE=31, COLON1=32, VERSION_NUMBER1=33, 
		WHITE_SPACE1=34, MULTILINE_COMMENT1=35, LINE_COMMENT1=36;
	public const int
		DIRECTIVE_VERSION1=1;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE", "DIRECTIVE_VERSION1"
	};

	public static readonly string[] ruleNames = {
		"TITLE", "VERSION", "INCLUDE", "PRAGMA", "DEFINE", "SCHEMA", "TRUE", "FALSE", 
		"NULL", "COLON", "COMMA", "STAR", "LBRACE", "RBRACE", "LBRACKET", "RBRACKET", 
		"LPAREN", "RPAREN", "OPTIONAL", "UNDEFINED", "IDENTIFIER", "ALIAS", "DATATYPE", 
		"FUNCTION", "BASE_IDENTIFIER", "ALPHA", "ALPHANUMERIC", "STRING", "ESCAPE", 
		"UNICODE", "HEXDIGIT", "SAFECODEPOINT", "INTEGER", "FLOAT", "DOUBLE", 
		"INTDIGIT", "EXPONENT", "DIGIT", "MULTILINE_COMMENT", "LINE_COMMENT", 
		"MULTILINE_CMT", "LINE_CMT", "WHITE_SPACE", "WHITE_SPC", "COLON1", "VERSION_NUMBER1", 
		"WHITE_SPACE1", "MULTILINE_COMMENT1", "LINE_COMMENT1"
	};


	public SchemaLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public SchemaLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'%title'", "'%version'", "'%include'", "'%pragma'", "'%define'", 
		"'%schema'", "'true'", "'false'", "'null'", null, "','", "'*'", "'{'", 
		"'}'", "'['", "']'", "'('", "')'", "'?'", "'!'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "TITLE", "VERSION", "INCLUDE", "PRAGMA", "DEFINE", "SCHEMA", "TRUE", 
		"FALSE", "NULL", "COLON", "COMMA", "STAR", "LBRACE", "RBRACE", "LBRACKET", 
		"RBRACKET", "LPAREN", "RPAREN", "OPTIONAL", "UNDEFINED", "IDENTIFIER", 
		"ALIAS", "DATATYPE", "FUNCTION", "STRING", "INTEGER", "FLOAT", "DOUBLE", 
		"MULTILINE_COMMENT", "LINE_COMMENT", "WHITE_SPACE", "COLON1", "VERSION_NUMBER1", 
		"WHITE_SPACE1", "MULTILINE_COMMENT1", "LINE_COMMENT1"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "SchemaLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static SchemaLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,36,355,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
		6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,
		2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,
		2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,
		2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,
		2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,
		2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,
		1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
		1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,
		1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,
		6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,10,
		1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,
		1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,20,5,20,193,8,20,10,20,12,20,196,
		9,20,1,21,1,21,1,21,1,22,1,22,4,22,203,8,22,11,22,12,22,204,1,23,1,23,
		1,23,1,24,1,24,5,24,212,8,24,10,24,12,24,215,9,24,1,25,1,25,1,26,1,26,
		1,27,1,27,1,27,5,27,224,8,27,10,27,12,27,227,9,27,1,27,1,27,1,28,1,28,
		1,28,3,28,234,8,28,1,29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,31,1,31,1,
		32,3,32,247,8,32,1,32,1,32,1,33,1,33,1,33,4,33,254,8,33,11,33,12,33,255,
		1,34,1,34,1,34,4,34,261,8,34,11,34,12,34,262,3,34,265,8,34,1,34,1,34,1,
		35,1,35,1,35,5,35,272,8,35,10,35,12,35,275,9,35,3,35,277,8,35,1,36,1,36,
		3,36,281,8,36,1,36,4,36,284,8,36,11,36,12,36,285,1,37,1,37,1,38,1,38,1,
		38,1,38,1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,40,5,40,302,8,40,10,40,12,
		40,305,9,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,5,41,314,8,41,10,41,12,
		41,317,9,41,1,42,1,42,1,42,1,42,1,43,4,43,324,8,43,11,43,12,43,325,1,44,
		1,44,1,45,1,45,1,45,4,45,333,8,45,11,45,12,45,334,5,45,337,8,45,10,45,
		12,45,340,9,45,1,45,1,45,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,48,
		1,48,1,48,1,48,1,303,0,49,2,1,4,2,6,3,8,4,10,5,12,6,14,7,16,8,18,9,20,
		10,22,11,24,12,26,13,28,14,30,15,32,16,34,17,36,18,38,19,40,20,42,21,44,
		22,46,23,48,24,50,0,52,0,54,0,56,25,58,0,60,0,62,0,64,0,66,26,68,27,70,
		28,72,0,74,0,76,0,78,29,80,30,82,0,84,0,86,31,88,0,90,32,92,33,94,34,96,
		35,98,36,2,0,1,11,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,
		8,0,34,34,47,47,92,92,98,98,102,102,110,110,114,114,116,116,3,0,48,57,
		65,70,97,102,3,0,0,31,34,34,92,92,1,0,49,57,2,0,69,69,101,101,2,0,43,43,
		45,45,1,0,48,57,2,0,10,10,13,13,3,0,9,10,13,13,32,32,359,0,2,1,0,0,0,0,
		4,1,0,0,0,0,6,1,0,0,0,0,8,1,0,0,0,0,10,1,0,0,0,0,12,1,0,0,0,0,14,1,0,0,
		0,0,16,1,0,0,0,0,18,1,0,0,0,0,20,1,0,0,0,0,22,1,0,0,0,0,24,1,0,0,0,0,26,
		1,0,0,0,0,28,1,0,0,0,0,30,1,0,0,0,0,32,1,0,0,0,0,34,1,0,0,0,0,36,1,0,0,
		0,0,38,1,0,0,0,0,40,1,0,0,0,0,42,1,0,0,0,0,44,1,0,0,0,0,46,1,0,0,0,0,48,
		1,0,0,0,0,56,1,0,0,0,0,66,1,0,0,0,0,68,1,0,0,0,0,70,1,0,0,0,0,78,1,0,0,
		0,0,80,1,0,0,0,0,86,1,0,0,0,1,90,1,0,0,0,1,92,1,0,0,0,1,94,1,0,0,0,1,96,
		1,0,0,0,1,98,1,0,0,0,2,100,1,0,0,0,4,107,1,0,0,0,6,118,1,0,0,0,8,127,1,
		0,0,0,10,135,1,0,0,0,12,143,1,0,0,0,14,151,1,0,0,0,16,156,1,0,0,0,18,162,
		1,0,0,0,20,167,1,0,0,0,22,169,1,0,0,0,24,171,1,0,0,0,26,173,1,0,0,0,28,
		175,1,0,0,0,30,177,1,0,0,0,32,179,1,0,0,0,34,181,1,0,0,0,36,183,1,0,0,
		0,38,185,1,0,0,0,40,187,1,0,0,0,42,189,1,0,0,0,44,197,1,0,0,0,46,200,1,
		0,0,0,48,206,1,0,0,0,50,209,1,0,0,0,52,216,1,0,0,0,54,218,1,0,0,0,56,220,
		1,0,0,0,58,230,1,0,0,0,60,235,1,0,0,0,62,241,1,0,0,0,64,243,1,0,0,0,66,
		246,1,0,0,0,68,250,1,0,0,0,70,257,1,0,0,0,72,276,1,0,0,0,74,278,1,0,0,
		0,76,287,1,0,0,0,78,289,1,0,0,0,80,293,1,0,0,0,82,297,1,0,0,0,84,309,1,
		0,0,0,86,318,1,0,0,0,88,323,1,0,0,0,90,327,1,0,0,0,92,329,1,0,0,0,94,343,
		1,0,0,0,96,347,1,0,0,0,98,351,1,0,0,0,100,101,5,37,0,0,101,102,5,116,0,
		0,102,103,5,105,0,0,103,104,5,116,0,0,104,105,5,108,0,0,105,106,5,101,
		0,0,106,3,1,0,0,0,107,108,5,37,0,0,108,109,5,118,0,0,109,110,5,101,0,0,
		110,111,5,114,0,0,111,112,5,115,0,0,112,113,5,105,0,0,113,114,5,111,0,
		0,114,115,5,110,0,0,115,116,1,0,0,0,116,117,6,1,0,0,117,5,1,0,0,0,118,
		119,5,37,0,0,119,120,5,105,0,0,120,121,5,110,0,0,121,122,5,99,0,0,122,
		123,5,108,0,0,123,124,5,117,0,0,124,125,5,100,0,0,125,126,5,101,0,0,126,
		7,1,0,0,0,127,128,5,37,0,0,128,129,5,112,0,0,129,130,5,114,0,0,130,131,
		5,97,0,0,131,132,5,103,0,0,132,133,5,109,0,0,133,134,5,97,0,0,134,9,1,
		0,0,0,135,136,5,37,0,0,136,137,5,100,0,0,137,138,5,101,0,0,138,139,5,102,
		0,0,139,140,5,105,0,0,140,141,5,110,0,0,141,142,5,101,0,0,142,11,1,0,0,
		0,143,144,5,37,0,0,144,145,5,115,0,0,145,146,5,99,0,0,146,147,5,104,0,
		0,147,148,5,101,0,0,148,149,5,109,0,0,149,150,5,97,0,0,150,13,1,0,0,0,
		151,152,5,116,0,0,152,153,5,114,0,0,153,154,5,117,0,0,154,155,5,101,0,
		0,155,15,1,0,0,0,156,157,5,102,0,0,157,158,5,97,0,0,158,159,5,108,0,0,
		159,160,5,115,0,0,160,161,5,101,0,0,161,17,1,0,0,0,162,163,5,110,0,0,163,
		164,5,117,0,0,164,165,5,108,0,0,165,166,5,108,0,0,166,19,1,0,0,0,167,168,
		5,58,0,0,168,21,1,0,0,0,169,170,5,44,0,0,170,23,1,0,0,0,171,172,5,42,0,
		0,172,25,1,0,0,0,173,174,5,123,0,0,174,27,1,0,0,0,175,176,5,125,0,0,176,
		29,1,0,0,0,177,178,5,91,0,0,178,31,1,0,0,0,179,180,5,93,0,0,180,33,1,0,
		0,0,181,182,5,40,0,0,182,35,1,0,0,0,183,184,5,41,0,0,184,37,1,0,0,0,185,
		186,5,63,0,0,186,39,1,0,0,0,187,188,5,33,0,0,188,41,1,0,0,0,189,194,3,
		50,24,0,190,191,5,46,0,0,191,193,3,50,24,0,192,190,1,0,0,0,193,196,1,0,
		0,0,194,192,1,0,0,0,194,195,1,0,0,0,195,43,1,0,0,0,196,194,1,0,0,0,197,
		198,5,36,0,0,198,199,3,50,24,0,199,45,1,0,0,0,200,202,5,35,0,0,201,203,
		3,52,25,0,202,201,1,0,0,0,203,204,1,0,0,0,204,202,1,0,0,0,204,205,1,0,
		0,0,205,47,1,0,0,0,206,207,5,64,0,0,207,208,3,50,24,0,208,49,1,0,0,0,209,
		213,3,52,25,0,210,212,3,54,26,0,211,210,1,0,0,0,212,215,1,0,0,0,213,211,
		1,0,0,0,213,214,1,0,0,0,214,51,1,0,0,0,215,213,1,0,0,0,216,217,7,0,0,0,
		217,53,1,0,0,0,218,219,7,1,0,0,219,55,1,0,0,0,220,225,5,34,0,0,221,224,
		3,58,28,0,222,224,3,64,31,0,223,221,1,0,0,0,223,222,1,0,0,0,224,227,1,
		0,0,0,225,223,1,0,0,0,225,226,1,0,0,0,226,228,1,0,0,0,227,225,1,0,0,0,
		228,229,5,34,0,0,229,57,1,0,0,0,230,233,5,92,0,0,231,234,7,2,0,0,232,234,
		3,60,29,0,233,231,1,0,0,0,233,232,1,0,0,0,234,59,1,0,0,0,235,236,5,117,
		0,0,236,237,3,62,30,0,237,238,3,62,30,0,238,239,3,62,30,0,239,240,3,62,
		30,0,240,61,1,0,0,0,241,242,7,3,0,0,242,63,1,0,0,0,243,244,8,4,0,0,244,
		65,1,0,0,0,245,247,5,45,0,0,246,245,1,0,0,0,246,247,1,0,0,0,247,248,1,
		0,0,0,248,249,3,72,35,0,249,67,1,0,0,0,250,251,3,66,32,0,251,253,5,46,
		0,0,252,254,3,76,37,0,253,252,1,0,0,0,254,255,1,0,0,0,255,253,1,0,0,0,
		255,256,1,0,0,0,256,69,1,0,0,0,257,264,3,66,32,0,258,260,5,46,0,0,259,
		261,3,76,37,0,260,259,1,0,0,0,261,262,1,0,0,0,262,260,1,0,0,0,262,263,
		1,0,0,0,263,265,1,0,0,0,264,258,1,0,0,0,264,265,1,0,0,0,265,266,1,0,0,
		0,266,267,3,74,36,0,267,71,1,0,0,0,268,277,5,48,0,0,269,273,7,5,0,0,270,
		272,3,76,37,0,271,270,1,0,0,0,272,275,1,0,0,0,273,271,1,0,0,0,273,274,
		1,0,0,0,274,277,1,0,0,0,275,273,1,0,0,0,276,268,1,0,0,0,276,269,1,0,0,
		0,277,73,1,0,0,0,278,280,7,6,0,0,279,281,7,7,0,0,280,279,1,0,0,0,280,281,
		1,0,0,0,281,283,1,0,0,0,282,284,3,76,37,0,283,282,1,0,0,0,284,285,1,0,
		0,0,285,283,1,0,0,0,285,286,1,0,0,0,286,75,1,0,0,0,287,288,7,8,0,0,288,
		77,1,0,0,0,289,290,3,82,40,0,290,291,1,0,0,0,291,292,6,38,1,0,292,79,1,
		0,0,0,293,294,3,84,41,0,294,295,1,0,0,0,295,296,6,39,1,0,296,81,1,0,0,
		0,297,298,5,47,0,0,298,299,5,42,0,0,299,303,1,0,0,0,300,302,9,0,0,0,301,
		300,1,0,0,0,302,305,1,0,0,0,303,304,1,0,0,0,303,301,1,0,0,0,304,306,1,
		0,0,0,305,303,1,0,0,0,306,307,5,42,0,0,307,308,5,47,0,0,308,83,1,0,0,0,
		309,310,5,47,0,0,310,311,5,47,0,0,311,315,1,0,0,0,312,314,8,9,0,0,313,
		312,1,0,0,0,314,317,1,0,0,0,315,313,1,0,0,0,315,316,1,0,0,0,316,85,1,0,
		0,0,317,315,1,0,0,0,318,319,3,88,43,0,319,320,1,0,0,0,320,321,6,42,1,0,
		321,87,1,0,0,0,322,324,7,10,0,0,323,322,1,0,0,0,324,325,1,0,0,0,325,323,
		1,0,0,0,325,326,1,0,0,0,326,89,1,0,0,0,327,328,5,58,0,0,328,91,1,0,0,0,
		329,338,3,76,37,0,330,332,5,46,0,0,331,333,3,76,37,0,332,331,1,0,0,0,333,
		334,1,0,0,0,334,332,1,0,0,0,334,335,1,0,0,0,335,337,1,0,0,0,336,330,1,
		0,0,0,337,340,1,0,0,0,338,336,1,0,0,0,338,339,1,0,0,0,339,341,1,0,0,0,
		340,338,1,0,0,0,341,342,6,45,2,0,342,93,1,0,0,0,343,344,3,88,43,0,344,
		345,1,0,0,0,345,346,6,46,1,0,346,95,1,0,0,0,347,348,3,82,40,0,348,349,
		1,0,0,0,349,350,6,47,1,0,350,97,1,0,0,0,351,352,3,84,41,0,352,353,1,0,
		0,0,353,354,6,48,1,0,354,99,1,0,0,0,21,0,1,194,204,213,223,225,233,246,
		255,262,264,273,276,280,285,303,315,325,334,338,3,5,1,0,0,1,0,4,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace RelogicLabs.JsonSchema.Antlr
