//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace RelogicLabs.JsonSchema.Antlr {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
internal partial class SchemaLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		TITLE=1, VERSION=2, INCLUDE=3, PRAGMA=4, DEFINE=5, SCHEMA=6, TRUE=7, FALSE=8,
		NULL=9, COLON=10, COMMA=11, STAR=12, LBRACE=13, RBRACE=14, LBRACKET=15,
		RBRACKET=16, LPAREN=17, RPAREN=18, OPTIONAL=19, UNDEFINED=20, IDENTIFIER=21,
		ALIAS=22, DATATYPE=23, FUNCTION=24, RECEIVER=25, STRING=26, INTEGER=27,
		FLOAT=28, DOUBLE=29, MULTILINE_COMMENT=30, LINE_COMMENT=31, WHITE_SPACE=32,
		COLON1=33, VERSION_NUMBER1=34, WHITE_SPACE1=35, MULTILINE_COMMENT1=36,
		LINE_COMMENT1=37;
	public const int
		DIRECTIVE_VERSION1=1;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE", "DIRECTIVE_VERSION1"
	};

	public static readonly string[] ruleNames = {
		"TITLE", "VERSION", "INCLUDE", "PRAGMA", "DEFINE", "SCHEMA", "TRUE", "FALSE",
		"NULL", "COLON", "COMMA", "STAR", "LBRACE", "RBRACE", "LBRACKET", "RBRACKET",
		"LPAREN", "RPAREN", "OPTIONAL", "UNDEFINED", "IDENTIFIER", "ALIAS", "DATATYPE",
		"FUNCTION", "RECEIVER", "BASE_IDENTIFIER", "ALPHA", "ALPHANUMERIC", "STRING",
		"ESCAPE", "UNICODE", "HEXDIGIT", "SAFECODEPOINT", "INTEGER", "FLOAT",
		"DOUBLE", "INTDIGIT", "EXPONENT", "DIGIT", "MULTILINE_COMMENT", "LINE_COMMENT",
		"MULTILINE_CMT", "LINE_CMT", "WHITE_SPACE", "WHITE_SPC", "COLON1", "VERSION_NUMBER1",
		"WHITE_SPACE1", "MULTILINE_COMMENT1", "LINE_COMMENT1"
	};


	public SchemaLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public SchemaLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'%title'", "'%version'", "'%include'", "'%pragma'", "'%define'",
		"'%schema'", "'true'", "'false'", "'null'", null, "','", "'*'", "'{'",
		"'}'", "'['", "']'", "'('", "')'", "'?'", "'!'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "TITLE", "VERSION", "INCLUDE", "PRAGMA", "DEFINE", "SCHEMA", "TRUE",
		"FALSE", "NULL", "COLON", "COMMA", "STAR", "LBRACE", "RBRACE", "LBRACKET",
		"RBRACKET", "LPAREN", "RPAREN", "OPTIONAL", "UNDEFINED", "IDENTIFIER",
		"ALIAS", "DATATYPE", "FUNCTION", "RECEIVER", "STRING", "INTEGER", "FLOAT",
		"DOUBLE", "MULTILINE_COMMENT", "LINE_COMMENT", "WHITE_SPACE", "COLON1",
		"VERSION_NUMBER1", "WHITE_SPACE1", "MULTILINE_COMMENT1", "LINE_COMMENT1"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "SchemaLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static SchemaLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,37,364,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
		6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,
		2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,
		2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,
		2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,
		2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,
		2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,
		2,49,7,49,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
		1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,
		3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,
		1,5,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,
		9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,
		1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,20,5,20,195,8,20,10,20,
		12,20,198,9,20,1,21,1,21,1,21,1,22,1,22,4,22,205,8,22,11,22,12,22,206,
		1,23,1,23,1,23,1,24,1,24,1,24,1,25,1,25,5,25,217,8,25,10,25,12,25,220,
		9,25,1,26,1,26,1,27,1,27,1,28,1,28,1,28,5,28,229,8,28,10,28,12,28,232,
		9,28,1,28,1,28,1,29,1,29,1,29,3,29,239,8,29,1,30,1,30,1,30,1,30,1,30,1,
		30,1,31,1,31,1,32,1,32,1,33,3,33,252,8,33,1,33,1,33,1,34,1,34,1,34,4,34,
		259,8,34,11,34,12,34,260,1,35,1,35,1,35,4,35,266,8,35,11,35,12,35,267,
		3,35,270,8,35,1,35,1,35,1,36,1,36,1,36,5,36,277,8,36,10,36,12,36,280,9,
		36,3,36,282,8,36,1,37,1,37,3,37,286,8,37,1,37,4,37,289,8,37,11,37,12,37,
		290,1,38,1,38,1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,
		41,5,41,307,8,41,10,41,12,41,310,9,41,1,41,1,41,1,41,1,42,1,42,1,42,1,
		42,5,42,319,8,42,10,42,12,42,322,9,42,1,43,1,43,1,43,1,43,1,44,4,44,329,
		8,44,11,44,12,44,330,1,45,1,45,1,46,4,46,336,8,46,11,46,12,46,337,1,46,
		1,46,4,46,342,8,46,11,46,12,46,343,5,46,346,8,46,10,46,12,46,349,9,46,
		1,46,1,46,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,
		1,308,0,50,2,1,4,2,6,3,8,4,10,5,12,6,14,7,16,8,18,9,20,10,22,11,24,12,
		26,13,28,14,30,15,32,16,34,17,36,18,38,19,40,20,42,21,44,22,46,23,48,24,
		50,25,52,0,54,0,56,0,58,26,60,0,62,0,64,0,66,0,68,27,70,28,72,29,74,0,
		76,0,78,0,80,30,82,31,84,0,86,0,88,32,90,0,92,33,94,34,96,35,98,36,100,
		37,2,0,1,11,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,8,0,34,
		34,47,47,92,92,98,98,102,102,110,110,114,114,116,116,3,0,48,57,65,70,97,
		102,3,0,0,31,34,34,92,92,1,0,49,57,2,0,69,69,101,101,2,0,43,43,45,45,1,
		0,48,57,2,0,10,10,13,13,3,0,9,10,13,13,32,32,369,0,2,1,0,0,0,0,4,1,0,0,
		0,0,6,1,0,0,0,0,8,1,0,0,0,0,10,1,0,0,0,0,12,1,0,0,0,0,14,1,0,0,0,0,16,
		1,0,0,0,0,18,1,0,0,0,0,20,1,0,0,0,0,22,1,0,0,0,0,24,1,0,0,0,0,26,1,0,0,
		0,0,28,1,0,0,0,0,30,1,0,0,0,0,32,1,0,0,0,0,34,1,0,0,0,0,36,1,0,0,0,0,38,
		1,0,0,0,0,40,1,0,0,0,0,42,1,0,0,0,0,44,1,0,0,0,0,46,1,0,0,0,0,48,1,0,0,
		0,0,50,1,0,0,0,0,58,1,0,0,0,0,68,1,0,0,0,0,70,1,0,0,0,0,72,1,0,0,0,0,80,
		1,0,0,0,0,82,1,0,0,0,0,88,1,0,0,0,1,92,1,0,0,0,1,94,1,0,0,0,1,96,1,0,0,
		0,1,98,1,0,0,0,1,100,1,0,0,0,2,102,1,0,0,0,4,109,1,0,0,0,6,120,1,0,0,0,
		8,129,1,0,0,0,10,137,1,0,0,0,12,145,1,0,0,0,14,153,1,0,0,0,16,158,1,0,
		0,0,18,164,1,0,0,0,20,169,1,0,0,0,22,171,1,0,0,0,24,173,1,0,0,0,26,175,
		1,0,0,0,28,177,1,0,0,0,30,179,1,0,0,0,32,181,1,0,0,0,34,183,1,0,0,0,36,
		185,1,0,0,0,38,187,1,0,0,0,40,189,1,0,0,0,42,191,1,0,0,0,44,199,1,0,0,
		0,46,202,1,0,0,0,48,208,1,0,0,0,50,211,1,0,0,0,52,214,1,0,0,0,54,221,1,
		0,0,0,56,223,1,0,0,0,58,225,1,0,0,0,60,235,1,0,0,0,62,240,1,0,0,0,64,246,
		1,0,0,0,66,248,1,0,0,0,68,251,1,0,0,0,70,255,1,0,0,0,72,262,1,0,0,0,74,
		281,1,0,0,0,76,283,1,0,0,0,78,292,1,0,0,0,80,294,1,0,0,0,82,298,1,0,0,
		0,84,302,1,0,0,0,86,314,1,0,0,0,88,323,1,0,0,0,90,328,1,0,0,0,92,332,1,
		0,0,0,94,335,1,0,0,0,96,352,1,0,0,0,98,356,1,0,0,0,100,360,1,0,0,0,102,
		103,5,37,0,0,103,104,5,116,0,0,104,105,5,105,0,0,105,106,5,116,0,0,106,
		107,5,108,0,0,107,108,5,101,0,0,108,3,1,0,0,0,109,110,5,37,0,0,110,111,
		5,118,0,0,111,112,5,101,0,0,112,113,5,114,0,0,113,114,5,115,0,0,114,115,
		5,105,0,0,115,116,5,111,0,0,116,117,5,110,0,0,117,118,1,0,0,0,118,119,
		6,1,0,0,119,5,1,0,0,0,120,121,5,37,0,0,121,122,5,105,0,0,122,123,5,110,
		0,0,123,124,5,99,0,0,124,125,5,108,0,0,125,126,5,117,0,0,126,127,5,100,
		0,0,127,128,5,101,0,0,128,7,1,0,0,0,129,130,5,37,0,0,130,131,5,112,0,0,
		131,132,5,114,0,0,132,133,5,97,0,0,133,134,5,103,0,0,134,135,5,109,0,0,
		135,136,5,97,0,0,136,9,1,0,0,0,137,138,5,37,0,0,138,139,5,100,0,0,139,
		140,5,101,0,0,140,141,5,102,0,0,141,142,5,105,0,0,142,143,5,110,0,0,143,
		144,5,101,0,0,144,11,1,0,0,0,145,146,5,37,0,0,146,147,5,115,0,0,147,148,
		5,99,0,0,148,149,5,104,0,0,149,150,5,101,0,0,150,151,5,109,0,0,151,152,
		5,97,0,0,152,13,1,0,0,0,153,154,5,116,0,0,154,155,5,114,0,0,155,156,5,
		117,0,0,156,157,5,101,0,0,157,15,1,0,0,0,158,159,5,102,0,0,159,160,5,97,
		0,0,160,161,5,108,0,0,161,162,5,115,0,0,162,163,5,101,0,0,163,17,1,0,0,
		0,164,165,5,110,0,0,165,166,5,117,0,0,166,167,5,108,0,0,167,168,5,108,
		0,0,168,19,1,0,0,0,169,170,5,58,0,0,170,21,1,0,0,0,171,172,5,44,0,0,172,
		23,1,0,0,0,173,174,5,42,0,0,174,25,1,0,0,0,175,176,5,123,0,0,176,27,1,
		0,0,0,177,178,5,125,0,0,178,29,1,0,0,0,179,180,5,91,0,0,180,31,1,0,0,0,
		181,182,5,93,0,0,182,33,1,0,0,0,183,184,5,40,0,0,184,35,1,0,0,0,185,186,
		5,41,0,0,186,37,1,0,0,0,187,188,5,63,0,0,188,39,1,0,0,0,189,190,5,33,0,
		0,190,41,1,0,0,0,191,196,3,52,25,0,192,193,5,46,0,0,193,195,3,52,25,0,
		194,192,1,0,0,0,195,198,1,0,0,0,196,194,1,0,0,0,196,197,1,0,0,0,197,43,
		1,0,0,0,198,196,1,0,0,0,199,200,5,36,0,0,200,201,3,52,25,0,201,45,1,0,
		0,0,202,204,5,35,0,0,203,205,3,54,26,0,204,203,1,0,0,0,205,206,1,0,0,0,
		206,204,1,0,0,0,206,207,1,0,0,0,207,47,1,0,0,0,208,209,5,64,0,0,209,210,
		3,52,25,0,210,49,1,0,0,0,211,212,5,38,0,0,212,213,3,52,25,0,213,51,1,0,
		0,0,214,218,3,54,26,0,215,217,3,56,27,0,216,215,1,0,0,0,217,220,1,0,0,
		0,218,216,1,0,0,0,218,219,1,0,0,0,219,53,1,0,0,0,220,218,1,0,0,0,221,222,
		7,0,0,0,222,55,1,0,0,0,223,224,7,1,0,0,224,57,1,0,0,0,225,230,5,34,0,0,
		226,229,3,60,29,0,227,229,3,66,32,0,228,226,1,0,0,0,228,227,1,0,0,0,229,
		232,1,0,0,0,230,228,1,0,0,0,230,231,1,0,0,0,231,233,1,0,0,0,232,230,1,
		0,0,0,233,234,5,34,0,0,234,59,1,0,0,0,235,238,5,92,0,0,236,239,7,2,0,0,
		237,239,3,62,30,0,238,236,1,0,0,0,238,237,1,0,0,0,239,61,1,0,0,0,240,241,
		5,117,0,0,241,242,3,64,31,0,242,243,3,64,31,0,243,244,3,64,31,0,244,245,
		3,64,31,0,245,63,1,0,0,0,246,247,7,3,0,0,247,65,1,0,0,0,248,249,8,4,0,
		0,249,67,1,0,0,0,250,252,5,45,0,0,251,250,1,0,0,0,251,252,1,0,0,0,252,
		253,1,0,0,0,253,254,3,74,36,0,254,69,1,0,0,0,255,256,3,68,33,0,256,258,
		5,46,0,0,257,259,3,78,38,0,258,257,1,0,0,0,259,260,1,0,0,0,260,258,1,0,
		0,0,260,261,1,0,0,0,261,71,1,0,0,0,262,269,3,68,33,0,263,265,5,46,0,0,
		264,266,3,78,38,0,265,264,1,0,0,0,266,267,1,0,0,0,267,265,1,0,0,0,267,
		268,1,0,0,0,268,270,1,0,0,0,269,263,1,0,0,0,269,270,1,0,0,0,270,271,1,
		0,0,0,271,272,3,76,37,0,272,73,1,0,0,0,273,282,5,48,0,0,274,278,7,5,0,
		0,275,277,3,78,38,0,276,275,1,0,0,0,277,280,1,0,0,0,278,276,1,0,0,0,278,
		279,1,0,0,0,279,282,1,0,0,0,280,278,1,0,0,0,281,273,1,0,0,0,281,274,1,
		0,0,0,282,75,1,0,0,0,283,285,7,6,0,0,284,286,7,7,0,0,285,284,1,0,0,0,285,
		286,1,0,0,0,286,288,1,0,0,0,287,289,3,78,38,0,288,287,1,0,0,0,289,290,
		1,0,0,0,290,288,1,0,0,0,290,291,1,0,0,0,291,77,1,0,0,0,292,293,7,8,0,0,
		293,79,1,0,0,0,294,295,3,84,41,0,295,296,1,0,0,0,296,297,6,39,1,0,297,
		81,1,0,0,0,298,299,3,86,42,0,299,300,1,0,0,0,300,301,6,40,1,0,301,83,1,
		0,0,0,302,303,5,47,0,0,303,304,5,42,0,0,304,308,1,0,0,0,305,307,9,0,0,
		0,306,305,1,0,0,0,307,310,1,0,0,0,308,309,1,0,0,0,308,306,1,0,0,0,309,
		311,1,0,0,0,310,308,1,0,0,0,311,312,5,42,0,0,312,313,5,47,0,0,313,85,1,
		0,0,0,314,315,5,47,0,0,315,316,5,47,0,0,316,320,1,0,0,0,317,319,8,9,0,
		0,318,317,1,0,0,0,319,322,1,0,0,0,320,318,1,0,0,0,320,321,1,0,0,0,321,
		87,1,0,0,0,322,320,1,0,0,0,323,324,3,90,44,0,324,325,1,0,0,0,325,326,6,
		43,1,0,326,89,1,0,0,0,327,329,7,10,0,0,328,327,1,0,0,0,329,330,1,0,0,0,
		330,328,1,0,0,0,330,331,1,0,0,0,331,91,1,0,0,0,332,333,5,58,0,0,333,93,
		1,0,0,0,334,336,3,78,38,0,335,334,1,0,0,0,336,337,1,0,0,0,337,335,1,0,
		0,0,337,338,1,0,0,0,338,347,1,0,0,0,339,341,5,46,0,0,340,342,3,78,38,0,
		341,340,1,0,0,0,342,343,1,0,0,0,343,341,1,0,0,0,343,344,1,0,0,0,344,346,
		1,0,0,0,345,339,1,0,0,0,346,349,1,0,0,0,347,345,1,0,0,0,347,348,1,0,0,
		0,348,350,1,0,0,0,349,347,1,0,0,0,350,351,6,46,2,0,351,95,1,0,0,0,352,
		353,3,90,44,0,353,354,1,0,0,0,354,355,6,47,1,0,355,97,1,0,0,0,356,357,
		3,84,41,0,357,358,1,0,0,0,358,359,6,48,1,0,359,99,1,0,0,0,360,361,3,86,
		42,0,361,362,1,0,0,0,362,363,6,49,1,0,363,101,1,0,0,0,22,0,1,196,206,218,
		228,230,238,251,260,267,269,278,281,285,290,308,320,330,337,343,347,3,
		5,1,0,0,1,0,4,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace RelogicLabs.JsonSchema.Antlr